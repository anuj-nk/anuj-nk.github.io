---
// src/components/ProjectCard.astro
interface Props {
  project: any;
  compact?: boolean;
}
const { project, compact = false } = Astro.props;
const { data, slug } = project;
const href = `/projects/${slug}`;
---
<article class={`group rounded-2xl ring-1 ring-black/10 bg-white/80 shadow hover:shadow-md transition overflow-hidden`}>
  {data.image && (
    <a href={href} class="block aspect-[16/9] overflow-hidden">
      <img src={data.image} alt={data.title} class="h-full w-full object-cover group-hover:scale-[1.02] transition" loading="lazy" />
    </a>
  )}
  <div class="p-4 sm:p-5">
    <div class="mb-2 flex items-center gap-2">
      {data.status && <span class="rounded-full bg-zinc-100 px-2 py-0.5 text-xs text-zinc-600 ring-1 ring-zinc-200">{data.status}</span>}
      {data.org && <span class="rounded-full bg-zinc-50 px-2 py-0.5 text-xs text-zinc-600 ring-1 ring-zinc-200">{data.org}</span>}
    </div>
    <a href={href} class="block">
      <h3 class="text-lg font-semibold text-zinc-900">{data.title}</h3>
      <p class="mt-1 text-sm text-zinc-600 line-clamp-2">{data.summary}</p>
    </a>
    {(data.repo || data.demo) && (
      <div class="mt-3 flex flex-wrap gap-2">
        {data.demo && <a href={data.demo} class="text-sm text-teal-700 hover:underline">Live demo →</a>}
        {data.repo && <a href={data.repo} class="text-sm text-zinc-700 hover:underline">Repo ↗</a>}
      </div>
    )}
    {data.tags?.length ? (
      <div class="mt-3 flex flex-wrap gap-1.5">
        {data.tags.map((t: string) => (
          <span class="rounded-full bg-white px-2 py-0.5 text-[11px] text-zinc-600 ring-1 ring-zinc-200">{t}</span>
        ))}
      </div>
    ) : null}
  </div>
</article>
