---
import Layout from '../layouts/Layout.astro';
import BlogCard from '../components/BlogCard.astro';
import { getCollection } from 'astro:content';

const allPosts = await getCollection('blog');
const sorted = allPosts.sort((a: { data: { date: { getTime: () => number; }; }; }, b: { data: { date: { getTime: () => number; }; }; }) => b.data.date.getTime() - a.data.date.getTime());

// extract pinned first
const pinned = sorted.filter((p: { data: { pinned: any; }; }) => p.data.pinned);
const rest   = sorted.filter((p: { data: { pinned: any; }; }) => !p.data.pinned);

// pagination only applies to `rest`
const pageSize = 8;
const page = Number(Astro.url.searchParams.get('page') ?? 1);
const paginated = rest.slice((page-1)*pageSize, page*pageSize);
const totalPages = Math.ceil(rest.length / pageSize);
---

<Layout title="Blog">
  <section class="mx-auto max-w-5xl px-6 py-20 ">

    <h1 class="mb-12 text-center text-5xl font-extrabold text-zinc-900">Blog</h1>

    {pinned.length > 0 && (
      <>
        <h2 class="mb-6 text-2xl font-bold">Pinned</h2>
        <div class="grid gap-10 sm:grid-cols-2 mb-16">
          {pinned.map((post: unknown) => <BlogCard post={post} pinned />)}
        </div>
      </>
    )}

    <h2 class="mb-6 text-2xl font-bold">
      {pinned.length > 0 ? 'Latest Posts' : 'All Posts'}
    </h2>
    <div class="grid gap-10 sm:grid-cols-2">
      {paginated.map((post: unknown) => <BlogCard post={post} />)}
    </div>

    {totalPages > 1 && (
      <nav class="mt-16 flex justify-center gap-4">
        {Array.from({ length: totalPages }, (_, i) => i+1).map(i => (
          <a
            href={`/blog?page=${i}`}
            class={`rounded px-3 py-1 ${i===page ? 'bg-teal-600 text-white' : 'bg-slate-100 text-zinc-800'} text-sm`}
          >{i}</a>
        ))}
      </nav>
    )}

  </section>
</Layout>
